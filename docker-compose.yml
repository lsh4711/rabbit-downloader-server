services:
  test-db:
    image: mysql:8.0.36
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1
      start_period: 3s
      interval: 1s
      timeout: 1s
      retries: 10

  test:
    build:
      dockerfile: deploy/Dockerfile-server
      target: test-builder
    depends_on:
      test-db:
        condition: service_healthy
    init: true
    ipc: host
    entrypoint: [ npx, jest, --bail ]

  server: &server
    build:
      dockerfile: deploy/Dockerfile-server
    image: ${REGISTRY_ENDPOINT}/rabbit-server-nest:1.12
    ipc: host
    volumes: [ ./env/production/.env:/app/env/production/.env ]
    entrypoint: [ node, dist/src/main ]

  server-dev:
    <<: *server
    container_name: rabbit-server-nest-dev
    ports: [ "8080:8080" ]

  server1:
    <<: *server
    container_name: rabbit-server-nest-1

  server2:
    <<: *server
    container_name: rabbit-server-nest-2

  nginx:
    build:
      dockerfile: deploy/Dockerfile-nginx
    image: ${REGISTRY_ENDPOINT}/rabbit-nginx
    container_name: rabbit-nginx
    environment:
      SERVER_ENDPOINT: server
      NGINX_ENVSUBST_FILTER: ^SERVER_ENDPOINT$
#    ports: [ "8080:8080" ]e
